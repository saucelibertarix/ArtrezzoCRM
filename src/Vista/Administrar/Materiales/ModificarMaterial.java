/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista.Administrar.Materiales;


import Controlador.OperarClientes;
import Controlador.OperarMateriales;
import Controlador.OperarProveedor;
import Modelo.Cliente;
import Modelo.Material;
import Modelo.Proveedor;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pfarinamoreno
 */
public class ModificarMaterial extends javax.swing.JFrame {

    /**
     * Creates new form ModificarClierte
     */
    public ModificarMaterial() {
        initComponents();
        
        OperarMateriales opeMat = new OperarMateriales();
        List<Material> materiales = opeMat.listarMateriales();
        DefaultComboBoxModel cbm = new DefaultComboBoxModel();
        cbm.addElement("--Seleccionar Material--");
        for(int x =0;x<materiales.size();x++){
            String nombre = materiales.get(x).getMaterialNombre();
           cbm.addElement(nombre);
        }
        cmb_mod_mat.setModel(cbm);
        
        OperarProveedor opePro = new OperarProveedor();
        List<Proveedor> proveedores = opePro.listarProveedores();
        DefaultComboBoxModel cbm2 = new DefaultComboBoxModel();
        cbm2.addElement("--Seleccionar Proveedor--");
        for(int x =0;x<proveedores.size();x++){
           String nombre = proveedores.get(x).getProveedorNombre();
           cbm2.addElement(nombre);
        }
        cmb_mod_mat_pro.setModel(cbm2);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        label2 = new javax.swing.JLabel();
        cmb_mod_mat = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txt_mod_mat_nom = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_mod_mat_pre = new javax.swing.JTextField();
        btn_mod_mat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_mod_mat = new javax.swing.JTable();
        cmb_mod_mat_pro = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_mod_mat_com = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Modificar Material");

        label2.setText("Material");

        cmb_mod_mat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmb_mod_mat.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_mod_matItemStateChanged(evt);
            }
        });

        jLabel3.setText("Nuevo Nombre");

        jLabel4.setText("Nuevo Proveedor");

        jLabel5.setText("Nueva Comentario");

        jLabel6.setText("Nuevo Precio");

        txt_mod_mat_pre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_mod_mat_preActionPerformed(evt);
            }
        });

        btn_mod_mat.setText("Modificar Material");
        btn_mod_mat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mod_matActionPerformed(evt);
            }
        });

        tbl_mod_mat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Proveedor", "Descripci√≥n", "Precio"
            }
        ));
        jScrollPane1.setViewportView(tbl_mod_mat);

        cmb_mod_mat_pro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txt_mod_mat_com.setColumns(20);
        txt_mod_mat_com.setRows(5);
        jScrollPane2.setViewportView(txt_mod_mat_com);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_mod_mat_nom, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_mod_mat_pre, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmb_mod_mat_pro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE))))
                .addGap(92, 92, 92))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(label2)
                                .addGap(277, 277, 277)
                                .addComponent(cmb_mod_mat, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 704, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(303, 303, 303)
                        .addComponent(btn_mod_mat)))
                .addGap(0, 26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label2)
                    .addComponent(cmb_mod_mat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_mod_mat_nom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmb_mod_mat_pro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_mod_mat_pre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(btn_mod_mat)
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_mod_mat_preActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_mod_mat_preActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_mod_mat_preActionPerformed

    private void cmb_mod_matItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_mod_matItemStateChanged
        String nombreMaterial = (String)cmb_mod_mat.getSelectedItem();
        String vacio;
        OperarMateriales opeMat = new OperarMateriales();
        List<Material> materiales = opeMat.buscarMaterialPorNombre(nombreMaterial);
        Vector<String> tableHeaders = new Vector <String>();
        Vector tableData = new Vector();
        tableHeaders.add("Nombre");
        tableHeaders.add("Proveedor");
        tableHeaders.add("Descripci√≥n");
        tableHeaders.add("Precio");


        for (Object o : materiales){
                Material material = (Material) o;
                Vector<Object> oneRow = new Vector<Object>();

                oneRow.add(material.getMaterialNombre());
                oneRow.add(material.getProveedor().getProveedorNombre());
                oneRow.add(material.getMaterialComentario());
                oneRow.add(material.getMaterialPrecio());
                tableData.add(oneRow);
        }
        tbl_mod_mat.setModel(new DefaultTableModel (tableData, tableHeaders));
    }//GEN-LAST:event_cmb_mod_matItemStateChanged

    private void btn_mod_matActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mod_matActionPerformed
        String nombreMaterial = (String)cmb_mod_mat.getSelectedItem();
        String nombrePro = (String)cmb_mod_mat_pro.getSelectedItem();
        
        int index = cmb_mod_mat_pro.getSelectedIndex();
        
        OperarMateriales opeMat = new OperarMateriales();
        OperarProveedor opePro = new OperarProveedor();
        Proveedor proveedor = new Proveedor();
        if(index == 0){
            List<Material> materiales = opeMat.buscarMaterialPorNombre(nombreMaterial);
            for (int x=0; x<materiales.size();x++){
                Material material = materiales.get(x);
                Proveedor proveedor2 = new Proveedor();
                proveedor2.setProveedorId(material.getProveedor().getProveedorId());
                proveedor2.setProveedorNombre(material.getProveedor().getProveedorNombre());
                proveedor2.setProveedorDireccion(material.getProveedor().getProveedorDireccion());
                proveedor2.setProveedorTelefono(material.getProveedor().getProveedorTelefono());
                proveedor = proveedor2;
            }
            
        }else{
            Proveedor proveedor2 = new Proveedor();
            List<Proveedor> proveedores = opePro.buscarProveedorPorNombre(nombrePro);
            
            for(int x=0;x<proveedores.size();x++){
                proveedor2.setProveedorId(proveedores.get(x).getProveedorId());
                proveedor2.setProveedorNombre(proveedores.get(x).getProveedorNombre());
                proveedor2.setCif(proveedores.get(x).getCif());
                proveedor2.setProveedorDireccion(proveedores.get(x).getProveedorDireccion());
                proveedor2.setProveedorTelefono(proveedores.get(x).getProveedorTelefono());  
                
                proveedor = proveedor2;
            }
        }
        
        
        int idMaterial = opeMat.buscarMaterialIdPorNombre(nombreMaterial);
        String nuevoNombre = txt_mod_mat_nom.getText();
        String nuevoPrecio =txt_mod_mat_pre.getText();
        double nuevoPre;
        if(nuevoPrecio.isEmpty()){
            nuevoPre=0;
        }else{
            nuevoPre = Double.parseDouble(nuevoPrecio);
        }
        String nuevaDesc = txt_mod_mat_com.getText();
        opeMat.modificarMaterial(idMaterial, proveedor, nuevoNombre, nuevaDesc ,nuevoPre);
       
        txt_mod_mat_nom.setText("");
        txt_mod_mat_pre.setText("");
        txt_mod_mat_com.setText("");
        
        
        List<Material> materiales = opeMat.listarMateriales();
        DefaultComboBoxModel cbm = new DefaultComboBoxModel();
        cbm.addElement("--Seleccionar Material--");
        for(int x =0;x<materiales.size();x++){
           String nombre = materiales.get(x).getMaterialNombre();
           cbm.addElement(nombre);
        }
        cmb_mod_mat.setModel(cbm);
        
        
        List<Proveedor> proveedores2 = opePro.listarProveedores();
        DefaultComboBoxModel cbm2 = new DefaultComboBoxModel();
        cbm2.addElement("--Seleccionar Proveedor--");
        for(int x =0;x<proveedores2.size();x++){
           String nombre = proveedores2.get(x).getProveedorNombre();
           cbm2.addElement(nombre);
        }
        cmb_mod_mat_pro.setModel(cbm2);
       
        Vector<String> tableHeaders = new Vector <String>();
        Vector tableData = new Vector();
        tableHeaders.add("Nombre");
        tableHeaders.add("Proveedor");
        tableHeaders.add("Descripci√≥n");
        tableHeaders.add("Precio");
        tbl_mod_mat.setModel(new DefaultTableModel (tableData, tableHeaders));
    }//GEN-LAST:event_btn_mod_matActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificarMaterial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificarMaterial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificarMaterial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarMaterial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModificarMaterial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_mod_mat;
    private javax.swing.JComboBox<String> cmb_mod_mat;
    private javax.swing.JComboBox<String> cmb_mod_mat_pro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel label2;
    private javax.swing.JTable tbl_mod_mat;
    private javax.swing.JTextArea txt_mod_mat_com;
    private javax.swing.JTextField txt_mod_mat_nom;
    private javax.swing.JTextField txt_mod_mat_pre;
    // End of variables declaration//GEN-END:variables
}
